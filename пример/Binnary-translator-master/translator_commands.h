#include "enums.h"

#define DB(value)\
	{size_t temp = value;\
	memcpy (this -> output_current, &temp, 1);\
	this -> output_current += 1;}

#define DW(value)\
	{size_t temp = value;\
	memcpy (this -> output_current, &temp, 2);\
	this -> output_current += 2;}

#define DD(value)\
	{size_t temp = value;\
	memcpy (this -> output_current, &temp, 4);\
	this -> output_current += 4;}

#define DQ(value)\
	{size_t temp = value;\
	memcpy (this -> output_current, &temp, 8);\
	this -> output_current += 8;}

#define GETINT this -> get_int ()

#define JUMP(number)\
	{\
		DB (0x5b)\
		DB (0x58)\
		DB (0x48) DB (0x39) DB (0xd8)\
		DB (0x0f) DB (0x82 + number) DD (GETINT - (size_t)( this -> output_current) + (size_t) (this -> output_buffer) - 4)\
	}//11

TRAN_CMD(END, { 
		DW (0x8148) DB (0xc5) DD (0x400)    
		DB (0xb8)   DD (0x3c) DW (0x3148) DB (0xff) DW (0x050f) 
		}) //17

TRAN_CMD(OUT, { 							    //178
		DB (0x58)
		
		DB (0x53)
		DB (0x51)
		DB (0x52)
		
		DB (0xbb) DD (0x3b9aca00)
		DB (0x48) DB (0xbf) DQ (0x6000c2)
		DB (0x48) DB (0xbe) DQ (0x6000b2)
		DB (0x41) DB (0xb8) DD (0x00)
		DB (0xb9) DD (0x80000000)//40
		DB (0x48) DB (0x21) DB (0xc1)
		DW (0x8348) DB (0xf9) DB (0x00)
		DB (0x74) DB (0x1b)
		DB (0x48) DW (0xc1c7) DD (0xffffffff)
		DW (0x3148) DB (0xd2)
		DW (0xf748) DB (0xe1)
		DB (0xb3) DB (0x2d)
		DB (0x88) DB (0x1f)
		DW (0xff48) DB (0xc7)
		DB (0xb9) DD (0x1)
		DB (0xeb) DB (0x03)

		DW (0x3148) DB (0xc9)

		DB (0xba) DD (0x00)
		DW (0xf748) DB (0xf3)
		DB (0x4c) DB (0x39) DB (0xc0)//90
		DB (0x74) DB (0x18)
		DB (0x41) DB (0xb8) DD (0xb)
		DB (0x48) DB (0x01) DB (0xc6)
		DB (0x53)
		DB (0x8a) DB (0x1e)
		DB (0x88) DB (0x1f)
		DB (0x5b)
		DW (0x2948) DB (0xc6)//110
		DW (0xff48) DB (0xc7)
		DW (0xff48) DB (0xc1)

		DB (0x52)
		DW (0x8948) DB (0xd8)//120
		DB (0xbb) DD (0xa)
		DB (0xba) DD (0x00)
		DW (0xf748) DB (0xf3)
		DW (0x8948) DB (0xc3)
		DB (0x58)
		DW (0x8348) DB (0xfb) DB (0x00)
		DB (0x75) DB (0xc0)
		DB (0xb3) DB (0xa)
		DB (0x88) DB (0x1f)
		DW (0xff48) DB (0xc1)//150
		DB (0xb8) DD (0x1)
		DB (0xbf) DD (0x1)
		DW (0xbe48) DQ (0x6000c2)
		DW (0x8948) DB (0xca)
		DW (0x050f)

		DB (0x5a)	
		DB (0x59)
		DB (0x5b)//178
		})

TRAN_CMD (PUSH, {
		int mode = GETINT;

		switch (mode)
		{
			case VAL:
				DB (0x68) DD (GETINT) //5
		
				break;
	
			case REG:
				DB (0x50 + GETINT) //1

				break;	

			case RAM:
				DB (0x55)
				DW (0x8148) DB (0xed) DD (GETINT * 8) //14
				DD (0x458b48)
				DB (0x5d)
				DB (0x50)
	
				break;	
			
			case REGRAM:
				DW (0x8948) DB (0xc0 + GETINT)//21
				DB (0xba) DD (0x8)
				DW (0xf748) DB (0xe2)
				DB (0x55)
				DW (0x2948) DB (0xc5)
				DD (0x458b48)
				DB (0x5d)
				DB (0x50)

				break;
		}
		})

TRAN_CMD (POP, {
		int mode = GETINT;

		switch (mode)
		{
			case REG:
				DB (0x58 + GETINT) //1

				break;
			
			case RAM:
				DB (0x58)
				DB (0x55)
				DW (0x8148) DB (0xed) DD (GETINT * 8)//14
				DD (0x458948)
				DB (0x5d)

				break;

			case REGRAM:
				DW (0x8948) DB (0xc0 + GETINT)//20
				DB (0xbb) DD (0x8)
				DB (0xf7) DB (0xe3)
				DB (0x5b)
				DB (0x55)
				DW (0x2948) DB (0xc5)
				DD (0x5d8948)
				DB (0x5d)

				break;
				
		}
		})

TRAN_CMD (IN, {								//113
		DB (0x53)
		DB (0x51)
		DB (0x52)

		DB (0xb8) DD (0x3)
		DB (0xbb) DD (0x2)
		DB (0x48) DB (0xb9) DQ (0x6000c2)
		DB (0xba) DD (0xa)
		DW (0x80cd)//30
		DB (0x48) DB (0xbf) DQ (0x6000c2)
		DW (0x3148) DB (0xc0)
		DW (0x3148) DB (0xdb)
		DB (0x8a) DB (0x1f)
		DB (0x80) DB (0xfb) DB (0x2d)
		DB (0x75) DB (0x05)
		DW (0xff48) DB (0xc7)
		DB (0x8a) DB (0x1f)

		DB (0x80) DB (0xeb) DB (0x30)
		DB (0xb9) DD (0xa)
		DW (0xf748) DB (0xe1)
		DW (0x0148) DB (0xd8)
		DW (0xff48) DB (0xc7)
		DW (0x3148) DB (0xdb)
		DB (0x8a) DB (0x1f)//80
		DB (0x80) DB (0xfb) DB (0x1e)
		DB (0x73) DB (0xe5)
		DW (0x1c8a) DB (0x25) DD (0x6000c2)
		DB (0x80) DB (0xfb) DB (0x2d)
		DB (0x74) DB (0x02)
		DB (0xeb) DB (0x0a)

		DB (0x48) DW (0xc2c7) DD (0xffffffff)
		DB (0x48) DW (0xe2f7)

		DB (0x5a)	
		DB (0x59)
		DB (0x5b)

		DB (0x50)//113
		})

TRAN_CMD (ADD, {		//6
		DB (0x5b)
		DB (0x58)
		DW (0x0148) DB (0xd8)
		DB (0x50)
		})

TRAN_CMD (SUB, {		//6
		DB (0x5b)
		DB (0x58)
		DW (0x2948) DB (0xd8)
		DB (0x50)		
		})

TRAN_CMD (MUL, {		//8
		DB (0x5b)
		DB (0x58)
		DB (0x52)
		DW (0xf748) DB (0xeb)
		DB (0x5a)
		DB (0x50)		
		})

TRAN_CMD (DIV, {		//11
		DB (0x5b)
		DB (0x58)
		DB (0x52)
		DW (0x3148) DB (0xd2)
		DW (0xf748) DB (0xfb)
		DB (0x5a)
		DB (0x50)		
		})

TRAN_CMD (JMP, DB (0xe9) DD (GETINT - (size_t)( this -> output_current) + (size_t) (this -> output_buffer) - 4))

TRAN_CMD (JA , JUMP (0x5))
TRAN_CMD (JB , JUMP (0x0))
TRAN_CMD (JE , JUMP (0x2))
TRAN_CMD (JAE, JUMP (0x1))
TRAN_CMD (JBE, JUMP (0x4))
TRAN_CMD (JNE, JUMP (0x3))

TRAN_CMD (CALL, DB (0xe8) DD (GETINT - (size_t)( this -> output_current) + (size_t) (this -> output_buffer) - 4))

TRAN_CMD (REV, DB  (0xc3))//1
